
=======================
Question 0:
"""
=======================
Question 1:
"""
=======================
Question 2:
"""
=======================
Question 3:
"""

def num(s, a):
    n = 0
    m = 0
    while n < len(s):
        if a == s[n]:
            m += 1
        else:
            m
        n += 1
    return m
print(num('hello', 'l'))
=======================
Question 4:
"""
=======================
Question 5:
"""
def camelCase(s):
    i = 0
    caps = False # initialize as false so first word is not caps
    camelString = ""
    while i + 1 <= len(s):
        if "0" <= s[i] <= "9":
            camelString += s[i]
        elif "A" <= s[i] <= "Z":
            if caps:
                camelString += s[i]
            else:
                camelString += chr(ord(s[i]) + (ord("a") - ord("A"))) ## capitalizes
        elif "a" <= s[i] <= "z":
            if caps:
                camelString += chr(ord(s[i]) + (ord("a") - ord("A")))
            else:
                camelString += s[i]
        if s[i] = " ":
            caps = True  # next word will become capitalized 
        else:
            caps = False # this will only run after the capitalization process.
=======================
Question 6:
"""
=======================
Question 7:
"""
def replace(string):
    i = 0
    ans = ''
    while i < len(string):
        if i % 3 == 0:
            ans += chr(ord(string[i])+5)
        else:
            ans += string[i]
        i += 1
        
    return ans
print(replace("hello"))
print(replace("I have no clue what to write!"))
=======================
Question 8:
"""
=======================
Question 9:
"""

def productspecial(a, b, c):
    if a > b:
        if a > c:
            if b > c:
                return a * c
            else:
                return a * b
        else:
            return b * c
    else:
        if b > c:
            if a > c:
                return b * c
            else:
                return b * a
        else:
            return a * c
=======================
Question 10:
"""

def evens(s):
    i = 0
    newstr = ''
    while i < len(s):
        if int(s[i]) % 2 == 0:
            newstr += s[i]
        i += 1
    return newstr

print(evens('25543'))
=======================
Question 11:
"""
=======================
Question 12:
"""

def string_split(s):
    c = 0
    str_length = len(s)
    while c < str_length:
        str_seg = "" # segment of string
        space_found = False
        
        while (space_found == False) and (c < str_length):
            #print(c)
            new_char = s[c]
            if new_char == " ":
                space_found = True
            else:
                str_seg+= new_char
            c+= 1
        
        print(str_seg)

print('\n>>> string_split("thisisasentence")')
string_split("thisisasentence")
print('\n>>> string_split("five nights at freddy\'s")')
string_split("five nights at freddy's")
=======================
Question 13:
"""
def m30(r,s):
    new_s = ''
    i = 0
    if r == 0:
        while len(new_s) < len (s):
            new_s += chr(ord(s[i]) - 30)
            i += 1
        return new_s
    else:
        while len(new_s) < len (s):
            new_s += chr(ord(s[i]) + 30)
            i += 1
        return new_s
=======================
Question 14:
"""
=======================
Question 15:
"""
=======================
Question 16:
int
c. asc
d. len
asnwer a

what will the following function print?
print ('false')
a. false
b. 'false'
c. error

Write a Python function reverse_string(s)
that takes a string s as input and returns
the string reversed.

def reverse_string(s):
    reversed_str = ""
    index = len(s) - 1  
    while index >= 0:
        reversed_str += s[index] 
        index -= 1  
    return reversed_str

"""
=======================
Question 17:
"""
def switch(s):
    new_str = ''
    x = 0
    while x < len(s):
        if ord(s[x]) >= 97 and ord(s[x]) <= 109:
            (chr(122 - (97 - ord(s[x]))))
            p = (chr(122 + (97 - ord(s[x]))))
            new_str += p
        if ord(s[x]) >= 110 and ord(s[x]) <= 122:
            (chr(97 + (122 - (ord(s[x])))))
            o = (chr(97 + (122 - (ord(s[x])))))
            new_str += o
        x += 1
    return new_str

print(switch('ddd'))
print(switch('zyx'))
print(switch('abcdefghijklmnopqrstuvwxyz'))
=======================
Question 18:
"""
=======================
Question 19:
==================
=======================
Question 20:
"""
=======================
Question 21:
"""
=======================
Question 22:
"""
def pys (a, b, s):
    x = ""
    c = a* b
    shuffle = 0
    while len(s)>len(x):
        character= s[shuffle]
        shuffle +=1
        if character>"A" and character<"Z" or character>"a" and character<"z":
            x += chr(ord(character) + c)
        else:
            x += character
    print(x)
pys(5, 1, "hi, welcome to Our HUMBLE adopbe!:)")
=======================
Question 23:
"""
def ast (s):
    new_s=''
    c=0
    while c<len(s):
        if s[c]=='a' or s[c]=='e' or s[c]=='o' or s[c]=='i' or s[c]=='u' or s[c]=='A' or s[c]=='E' or s[c]=='I' or s[c]=='O' or s[c]=='U':
            new_s+='*'
            c+=1
        else:
            new_s+=s[c]
            c+=1
    return new_s
=======================
Question 24:
"""
def upper_lower_char(c):
    if 'a' <= c <= 'z':
        return chr(ord(c) - 32)  # lowercase to uppercase
    elif 'A' <= c <= 'Z':
        return chr(ord(c) + 32)  # uppercase to lowercase
    else:
        return c

def upper_lower(s):
    c = 0
    new_s = ''
    while c < len(s):
        new_s += upper_lower_char(s[c])
        c += 1
    return new_s

print(upper_lower('Hello World!'))
=======================
Question 25:
"""
=======================
Question 26:
"""

def reversal(s):
    count = -1
    new = ''
    diff = ord('a') - ord('A')
    while count >= (0 - len(s)):
        if s[count] >= 'A' and s[count] <= 'Z':
            new += chr(ord(s[count]) + diff)
        elif s[count] >= 'a' and s[count] <= 'z':
            new += chr(ord(s[count]) - diff)
        else:
            new += s[count]
        count -= 1
    return new
=======================
Question 27:
"""
=======================
Question 28:
"""
=======================
Question 29:
"""
=======================
Question 30:
"""
=======================
Question 31:
"""

def product_of_digits(num):
    product = 1
    while num // 10 > 0:
        product = product * (num % 10)
        num = num // 10
    return product